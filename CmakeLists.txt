cmake_minimum_required(VERSION 3.25)
project(quickJsEngine)

macro(project_set_vars)
    FILE(GLOB PROJECT_SOURCES_H                 "${CMAKE_SOURCE_DIR}/*.h")
    FILE(GLOB PROJECT_SOURCES_CPP               "${CMAKE_SOURCE_DIR}/*.c")

    set(PROJECT_LIB_DIR                         "${CMAKE_SOURCE_DIR}/libQuickJS/${CMAKE_SYSTEM_NAME}")
    set(PROJECT_INCLUDE_DIR                     "${CMAKE_SOURCE_DIR}/libQuickJS/src")
    set(RPOJECT_BIN_DIR                         "${CMAKE_SOURCE_DIR}/bin/${CMAKE_SYSTEM_NAME}")

    set(PROGP_COMPILE_OPTIONS                   -Wall -fno-rtti -fPIC)
    set(PROJECT_INCLUDE_SEARCH                   ${PROJECT_INCLUDE_DIR})
endmacro()


macro(project_printInfos)
    message("SYSTEM_ARCH: ${CMAKE_SYSTEM_NAME}")
    message("PROJECT_SOURCES_H: ${PROJECT_SOURCES_H}")
    message("PROJECT_SOURCES_CPP: ${PROJECT_SOURCES_CPP}")
    message("PROJECT_LIB_DIR: ${PROJECT_LIB_DIR}")
    message("PROJECT_INCLUDE_SEARCH: ${PROJECT_INCLUDE_SEARCH}")
endmacro()

macro(project_buildAsExecutable)
    add_executable(quickJsEngine)
    #
    target_sources(quickJsEngine PRIVATE ${PROJECT_SOURCES_CPP})
    target_link_libraries(quickJsEngine PUBLIC pthread -lquickjs -L${PROJECT_LIB_DIR})
    target_compile_options(quickJsEngine PUBLIC ${PROGP_COMPILE_OPTIONS} -DPROGP_STANDALONE)
    target_include_directories(quickJsEngine PRIVATE ${PROJECT_INCLUDE_SEARCH})

endmacro()

project_set_vars()
project_printInfos()
project_buildAsExecutable()



